{"name": "test_contract22222", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <UI_automation.test_case.test_contract.Test_contract object at 0x04043690>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6c4c68bc675e655cb7c7c02ee80dc2c3\")>\nlog_up = <commen.log.Log object at 0x04063D10>\n\n    def test_contract22222(self, browser, log_up):        #登录后点击添加学员按钮\n        try:\n            log_up.info('测试用例：签约合同')\n            loginsuccess(browser)\n            cont = Contract_page(browser)  # 实例化登录后的页面对象（mainpage）\n            cont.click_contract()\n            cont.switch_default_content()\n            cont.sign_contract()\n            sleep(1)\n            cont.switch_default_content()\n            sleep(1)\n            cont.last_alert()\n            sleep(0.5)\n>           cont.auditing_contract()\n\ntest_case\\test_contract.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\contract_page.py:52: in auditing_contract\n    self.Clicks('link_text', '[审核]', 0)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.contract_page.Contract_page object at 0x04063B90>\ntype = 'link_text', value = '[审核]', index = 0\n\n    def Clicks(self,type, value, index):\n        if type == \"xpath\":\n            self.driver.find_elements_by_xpath(value)[index].click()\n        elif type == \"class_name\":\n            self.driver.find_elements_by_class_name(value)[index].click()\n        elif type == \"id\":\n            self.driver.find_elements_by_id(value)[index].click()\n        elif type == \"name\":\n            self.driver.find_elements_by_name(value)[index].click()\n        elif type == \"link_text\":\n>           self.driver.find_elements_by_link_text(value)[index].click()\nE           IndexError: list index out of range\n\ncommen\\base.py:139: IndexError"}, "steps": [{"name": "添加失败截图...", "status": "passed", "attachments": [{"name": "失败截图", "source": "9d8feb95-5ac8-4d85-8772-b0147c582e98-attachment.png", "type": "image/png"}], "start": 1602228548112, "stop": 1602228548668}], "attachments": [{"name": "log", "source": "ebda0143-5a21-462e-917b-50025823cdd6-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "a8543550-6252-4090-b0a3-a859c393e5ae-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "08d0a143-926a-4d49-b9c3-54e1b659b03d-attachment.txt", "type": "text/plain"}], "start": 1602228518051, "stop": 1602228547989, "uuid": "d5844da1-2dab-4081-abcb-ada46395a206", "historyId": "9dbe9610200e93e86c91a6016f514fa0", "testCaseId": "af97db577796016c93d72c2cafc29498", "fullName": "test_case.test_contract.Test_contract#test_contract22222", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_contract"}, {"name": "subSuite", "value": "Test_contract"}, {"name": "host", "value": "TX5C3S1L7D31UYD"}, {"name": "thread", "value": "11120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_contract"}]}